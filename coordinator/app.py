from datetime import datetime, timedelta\nfrom fastapi import FastAPI, Request\nimport os, time, threading\n\napp = FastAPI()\n\n# === Core Server ===\nstart_time = datetime.utcnow()\nADMIN_PASSWORD = os.environ.get("ADMIN_PASS", "admin15081508")  # mật khẩu restart mặc định\n\n@app.get("/health")\ndef health():\n    now = datetime.utcnow()\n    uptime = str(now - start_time).split(".")[0]\n    print(f"[{now.strftime(%Y-%m-%d %H:%M:%S)}] 🩺 Health ping — uptime: {uptime}")\n    return {"ok": True, "status": "running", "uptime": uptime, "time": now.strftime(%Y-%m-%d %H:%M:%S UTC)}\n\n@app.get("/uptime")\ndef get_uptime():\n    now = datetime.utcnow()\n    uptime = str(now - start_time).split(".")[0]\n    return {"uptime": uptime, "since": start_time.strftime(%Y-%m-%d %H:%M:%S UTC)}\n\n@app.post("/restart")\ndef restart(req: Request):\n    data = {}\n    try:\n        data = req.json() if req.headers.get(content-type) == application/json else {}\n    except:\n        pass\n    pwd = data.get(password) if isinstance(data, dict) else None\n    if pwd != ADMIN_PASSWORD:\n        print(f"[{datetime.utcnow().strftime(%H:%M:%S)}] ❌ Unauthorized restart attempt")\n        return {"ok": False, "error": "Invalid password"}\n\n    def do_restart():\n        print(f"[{datetime.utcnow().strftime(%H:%M:%S)}] 🔁 Restart triggered by admin")\n        time.sleep(2)\n        os._exit(0)\n\n    threading.Thread(target=do_restart, daemon=True).start()\n    return {"ok": True, "message": "Server restarting..."}\n
